标准R-FCN训练心得

训练之前先删掉data/cache下的缓存文件。

Pascal_voc.py中的所以2007改成0712

该文件用于将数据分配为训练验证测试集合。像晶晶gun数据一样
http://blog.csdn.net/liumaolincycle/article/details/50540487
要是h5文件呢？

修改Iter=700， test.txt保留2000行。以加快速度！



训练用的是xml格式的数据。更改源码读入数据的地方有的容易出错（训练测试都要读取）。。
务必要非常熟练这个框架，参数含义，缓存，model等等。 为了方便，后续把训练和测试分开。

第一次训练测试结果：（参数：lr=0.001，Iter=700，test_num=2000）
Mean AP = 0.0445
~~~~~~~~
Results:20类
0.002
0.006
0.013
0.001
0.001
0.005
0.105
0.056
0.011
0.031
0.003
0.133
0.190
0.011
0.271
0.000
0.032
0.002
0.017
0.001
0.044
~~~~~~~~

real  
3m58.299s
user  
3m11.184s
sys  
0m27.552s

第二次训练测试结果：（参数：lr=0.001，Iter=7000，stepsize=5000, gamma=0.1，test_num=2000）
AP for aeroplane = 0.5496
AP for bicycle = 0.7230
AP for bird = 0.6797
AP for boat = 0.3838
AP for bottle = 0.4069
AP for bus = 0.6841
AP for car = 0.7207
AP for cat = 0.8512
AP for chair = 0.4012
AP for cow = 0.6926
AP for diningtable = 0.3588
AP for dog = 0.8280
AP for horse = 0.7025
AP for motorbike = 0.7432
AP for person = 0.6990
AP for pottedplant = 0.3358
AP for sheep = 0.5870
AP for sofa = 0.6215
AP for train = 0.7628
AP for tvmonitor = 0.4532
Mean AP = 0.6092
~~~~~~~~

--------------------------------------------------------------

real  
3m7.355s
user  
3m4.984s
sys  
0m27.500s

改进大大地啊！！

留个备份开始训练自己的数据集： head_upper

后续工作：
编写脚本画出 loss， rpn_loss， acc， etc 曲线
尽量自己写脚本，拿别人的用于不可能有深刻体会，一开始自己写的可能有些低效，日后再完善以前写的脚本。


caffe/include/caffe/net.hpp中定义了Net类，属于caffe空间。netforward？cpu？gpu？
