搭建Deformable ConvNets

https://github.com/msracver/Deformable-ConvNets

问题：执行sh ./init.sh命令之前应该先赋予可执行权限

mxnet有两种方式
一种是pip install -r requirements.txt，这种方法简单，但好像有点慢，且出错了不好debug。我先尝试了第一种，在python2环境下安装失败；由退出了python2环境，重新执行命令。后来实在太慢，就放弃了这种方式。
另一种是源码安装。

问题：error: pathspec '62ecb60' did not match any file(s) known to git.
在执行git checkout 62ecb60时出现
解决：应该在:~/workspace/Deformable-ConvNets/mxnet目录下执行此命令


问题：Unable to checkout '89de7ab20167909bc2c4f8acd397671c47cf3c0d' in submodule path 'cub'
在mxnet下执行git submodule update 时出现，按照https://github.com/apache/incubator-mxnet/issues/5113最后一个回答，手动替换cub至最新版本，命令是：
rm -r cub
git clone https://github.com/NVlabs/cub.git


编译：make -j $(nproc) USE_OPENCV=1 USE_BLAS=openblas USE_CUDA=1 USE_CUDA_PATH=/usr/local/cuda USE_CUDNN=1 CUDA_ARCH="-gencode arch=compute_61,code=sm_61 -gencode arch=compute_61,code=compute_61"
出现问题：fatal error: cub/device/device_radix_sort.cuh: No such file or directory
解决：这是由于上个问题cub版本不新导致的，上个问题解决后，就可以编译了。


3.6,3.7不要执行，可能会导致系统级python版本的混乱。

下面按说明下载params文件，软连接到model

运行demo发现提示cv2等module没有安装，于是进入Python2环境，发现可以运行demo了。

我们主要考虑rfcn和faster-rcnn
deeplab是做分割的，暂时不考虑。也不需要下载相应数据。


训练rfcn+VOC with ResNet-v1-101
python experiments/rfcn/rfcn_end2end_train_test.py --cfg experiments/rfcn/cfgs/resnet_v1_101_voc0712_rfcn_dcn_end2end_ohem.yaml
经过7个epoch成功复现了结果。
训练最开始在cache生成gt_roidb.pkl（存储 训练图片，测试图片，以及grondtruth， 类似于ssd中的lmdb文件）
训练结束生成了：cache下的test结果的annotations.pkl文件；output下的每一类物体检测结果的txt文件；output下的训练log、state、params文件和symbol文件。


./rfcn/config/config.py里有一堆参数，猜测是比较通用的参数
./experiments/rfcn/cfgs/resnet_v1_101_voc0712_rfcn_dcn_end2end_ohem.yaml则是更具体的参数。
update_config(args.cfg)的作用就是看两个参数文件有没有重合的，如果有，则采用yaml里的参数。




下面开始训练自己的数据集
手写制作voc格式的数据集，放在 data/Deepv/nanchang/
修改experiments/rfcn/cfgs/resnet_v1_101_voc0712_rfcn_dcn_end2end_ohem.yaml数据路径
修改lib/dataset/pascal_voc.py中的类别

可以训练了，但出现4个问题

Premature end of JPEG file
experiments/rfcn/../../rfcn/operator_py/proposal.py:167: RuntimeWarning: invalid value encountered in greater_equal
experiments/rfcn/../../rfcn/../lib/bbox/bbox_transform.py:83: RuntimeWarning: divide by zero encountered in divide
RPNL1Loss=nan

初步锁定是数据集的缘故，因为同样的代码，pascal数据集可以训练，deepv就不可以了；
找到原因了：lib/dataset/pascal_voc.py， line 158， dtype=np.nint16改成dtype=np.int16
这是因为标注数据有一些错误，框的大小为0，代码里的减1操作或导致nint范围溢出。而原本的pascal数据不存在这样的标注框
Premature end of JPEG file的问题还是没有解决。图片不完整的缘故导致的。之前ssd生成lmdb的时候也遇到这个提示，似乎对结果没什么影响。
训练函数调用顺序：
rfcn/train_end2end.py
lib/utils/load_data.py
lib/dataset/pascal_voc.py

测试函数调用顺序：
rfcn/test.py
rfcn/function/test_rcnn.py

yaml里有一个FLIP参数，会导致训练图片加倍。

这次的deformable convolution代码中，也集成了
faster-rcnn
rfcn
dcn+faster-rcnn
dcn+rfcn
end2end
alternative
有空试试faster-rcnn


下面开始将训练接口变得方便，但由于很多新开源的代码都是用这种文件结构模式，所以改动尽量小一点。
此刻才意识到，我一直使用的deepv_car_person_voc_style就是pascal_voc格式的数据:date/ImageSets/Main/{test.txt,train.txt,trainval.txt}, date/JPEGImages/*.jpg, date/Annotations/*.xml




demo.py用起来不太方便，需要参数过于分散，容易出错：yaml文件line 24，几张被测的图片名字line 70，model line 93，可视化的时候 关掉图片才能进入下一张line 132
输出的框模糊不清，分数等信息遮挡严重。//已经修改了接口。新的测试执行文件放在111：Deformable-ConvNets/jobs/person_car/test


下面开始更改训练网络，寻找合适的pretrain model。
在rfcn/train_end2end.py line59调用了网络搭建文件
网络的定义在 ./rfcn/symbols/resnet_v1_101_rfcn_dcn.py



