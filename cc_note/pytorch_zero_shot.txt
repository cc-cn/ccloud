
pytorch自定义网络，label是 属性+类别（参照pytorch官方60分钟教材）
1、按min_batchsize存数据from torch.utils.data import Dataset, DataLoader
2、搭建网络
3、选择loss
4、autograd
5、选择输出的最高分id作为测试结果
6、将上述步骤加入GPU计算：
model = nn.DataParallel(model)
model.to(device)




导入经典model：model = models.alexnet(pretrained=True)
修改全连接层：model.fc = nn.Linear(2048, 40)，2048是提取的特征维数，40是要分类的类别数。
查看模型中的层,以及权重：
for name, param in model.named_parameters():
    print name, param.data.size()
或者使用：model.eval()
或者print(model._modules['module'])


checkpoint = torch.load(model_weight)得到一个字典，keys：'epoch', 'arch', 'state_dict', 'best_prec1'

state_dict:权重
arch：'alexnet'
为模型赋值权重：model.load_state_dict(checkpoint['state_dict'])





loss是一个类的对象，avg是该类的一个数据
arc='avg'
loss.__dict__[arc]
上面两句等价于loss.avg



pytorch更新至最新版：
conda uninstall pytorch torchvision
conda install pytorch torchvision -c pytorch（这一调是根据官网环境配置给出的）
