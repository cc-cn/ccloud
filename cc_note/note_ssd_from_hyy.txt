以下是在胡扬阳整理的框架下学习：
先训练扬阳的原始数据：
OK

数据类型时：jpg+xml
生成img_label_list文件。
用~/tools生成yingshi的lmdb数据：
~/ssd/lib/tools$ ./create_data.sh  /home/chencheng/data/yingshi_lmdb  yingshi  /home/chencheng/data/yingshi_img_label   0.2 person_upper,person_head
生成~/ssd/data/yingshi_cc文件，里面有lmdb等文件。



在到config里设置网络，然后生成网络
mkdir yingshi,和fengzy_face 并列，下面有个hus_mobilenet,里面有仅有config.py，改里面的数据为yingshi,也就是上一步生成的ssd/data下的数据

cd jobs/hus_mobilenet/
vi config.py   ##修改类别数， 网络， 数据名称， mbox_source_layers， step， normalization等
../../../lib/tools/create_net.sh all ##生成网络的代码好好好好看看，从这里进去。

train：
nohup ./train.sh >>logs/log1 2>&1 & ，  >>表示追加到尾部！

生成loss曲线的脚本。
python ../../../lib/tools/parse_log.py  logs/log1

杀死nohup的方法:ps -ef |grep caffe
ps -ef |grep caffe |grep chen
会输出:
chenche+  6504  6503 99 23:46 pts/18   00:04:59 ../../../build/tools/caffe train --solver=solver.prototxt --gpu 1
chenche+  6599 27644  0 23:49 pts/18   00:00:00 grep --color=auto caffe
第一行就是要找的进程，第二行是正在使用的查找命令。
kill -9   6504

测试：
模型在 jobs/small_yingshi/hus_mobilenet/models_solverstates/

~/ssd/build/tools/ssd_predict  deploy.prototxt models_solverstates/_iter_100000.caffemodel  ~/data/yingshi_img_label 0.2    不加save_dir则默认是vis可视化。
或者../../../build/tools/ssd_predict deploy.prototxt models_solverstates/_iter_420000.caffemodel ~/data/yingshi_img_label 0.4 result  表示新建result文件，里面存储txt格式的预测label。
默认测试是用cpu，见tools/ssd_predict.cpp   line 120


结果：
51w次loss基本不降，把lr从1e-3降10倍. 到80w次不降，改lr=1e-5.
猜测loss不降原因：train batch_size太小16,  改成64 or 128 试试，不过这样就要从头训练了,且内存开销变大。



怎么从snapshot开始训练？在train.sh下加参数--snapshot="models_solverstates/_iter_20000.solverstate"
注意参数换行前要加反斜杠\，

源码vi tools/ssd_predict.cpp，修改源码之后要在ssd下make一下才能使用。

问题：build/tools/caffe train  怎么查看？？build好的东西是不能直接查看的，cpp源码在tools里

修改anchorbox-----只有自己写的东西才能活用啊
solver.prototxt可直接更改吗？可以。config里的东西只在生成网络的时候有用。
config里num_classes = 2是否需要更改？要改成3（背景，人头，上半身）



源码阅读：
1.从lib/tools/create_net.sh进入，遇到lib/tools/net_process.py，里面的参数来自于from net_params import *，而
lib/tools/net_params.py里有from config import *   这个文件里设定了很多默认参数，config的参数更多是需要更改的。    真是厉害，环境变量，import是个好东西！
train.sh中export PYTHONPATH=$HOME/tools:../../../lib:$PYTHONPATH  
creat_net.sh中export PYTHONPATH=$HOME/ssd/lib:$HOME/ssd/caffe/python:$HOME/tools:`pwd`:$PYTHONPATH
何时将config.py所在路径加入环境变量的呢？上一行的`pwd`就是！！可以自己试试

生成网络的主要文件是lib/tools/net_process.py  又引出:~/ssd/lib/tools/net_params.py    python/caffe/net_spec.py   ~/tools/net_zoom.py  
net是NetSpec类对象，下面的成员变量和成员函数以net.**的方式调用。 

用vgg网络试试，config里36行，normalizations加个5



在val上测试效果满意后，同样方式过滤测试集。


