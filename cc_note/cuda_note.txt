
source code download:
https://developer.nvidia.com/cuda-example

code from github:
https://github.com/ernestyalumni/CompPhys/tree/master/CUDA-By-Example/CUDA-By-Example

这本书写得比较详细，代码量本身不多，代码解释得很详细。速成的话，可以直接运行代码，不懂的地方到书上查。




目标：看懂caffe里的cuda代码，区别基于c和c++的cuda代码



.h和.hpp都可以作为cpp文件的头文件
hpp，其实质就是将.cpp的实现代码混入.h头文件当中，定义与实现都包含在同一文件，则该类的调用者只需要include该hpp文件即可，无需再将cpp加入到project中进行编译。而实现代码将直接编译到调用者的obj文件中，不再生成单独的obj，采用hpp将大幅度减少调用 project中的cpp文件数与编译次数，也不用再发布烦人的lib与dll，因此非常适合用来编写公用的开源库。
    hpp的优点不少，但是编写中有以下几点要注意：
1、是Header   Plus   Plus 的简写。
2、与*.h类似，hpp是C++程序头文件 。
3、是VCL专用的头文件,已预编译。
4、是一般模板类的头文件。
5、一般来说，*.h里面只有声明，没有实现，而*.hpp里声明实现都有，后者可以减少.cpp的数量。
6、*.h里面可以有using   namespace   std，而*.hpp里则无。

查看显卡信息：
cudaDeviceProp  prop;
int count;
cudaGetDeviceCount( &count );
for (int i=0; i< count; i++) {
	cudaGetDeviceProperties( &prop, i );
	printf( "   --- General Information for device %d ---\n", i );
	printf( "Name:  %s\n", prop.name );
	printf( "Compute capability:  %d.%d\n", prop.major, prop.minor );
	printf( "Clock rate:  %d\n", prop.clockRate );
	printf( "   --- Memory Information for device %d ---\n", i );
	printf( "Total global mem:  %ld\n", prop.totalGlobalMem );



